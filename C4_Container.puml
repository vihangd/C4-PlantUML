' Colors
' ##################################

'!define PERSON_BG_COLOR #08427B
'!define CONTAINER_BG_COLOR #438DD5
'!define SYSTEM_BG_COLOR #999999
'!define ELEMENT_FONT_COLOR #FFFFFF


'Blue 
'!define PERSON_BG_COLOR #030F19
!define PERSON_BG_COLOR #012039
''!define COMPONENT_BG_COLOR #08427A
!define COMPONENT_BG_COLOR #086FBE
!define CONTAINER_BG_COLOR #86BAEF
!define SYSTEM_BG_COLOR #999999
!define ELEMENT_FONT_COLOR #FFFFFF


'Maroon
/'
!define PERSON_BG_COLOR #500
!define COMPONENT_BG_COLOR #801515
!define CONTAINER_BG_COLOR #D39292
!define NODE_BG_COLOR #D9B9B9
!define SYSTEM_BG_COLOR #8C796D
'/

' Styling
' ##################################

!define TECHN_FONT_SIZE 12
skinparam sequence {
ArrowColor #666
ActorBorderColor GREY
LifeLineBorderColor GREY
LifeLineBackgroundColor CONTAINER_BG_COLOR
ParticipantBorderColor GREY
ParticipantBackgroundColor PERSON_BG_COLOR
ParticipantFontName Impact
ParticipantFontSize 17
ParticipantFontColor ELEMENT_FONT_COLOR

ActorBackgroundColor COMPONENT_BG_COLOR
ActorFontColor ELEMENT_FONT_COLOR
ActorFontSize 17
ActorFontName Aapex
}

skinparam defaultTextAlignment center

skinparam wrapWidth 200
skinparam maxMessageSize 150

skinparam rectangle {
    StereotypeFontSize 12
'    BackgroundColor #D6E2F0
BackgroundColor #FBF9FA
}

skinparam Arrow {
    Color #666666
    FontColor #666666
    FontSize 12
}

skinparam rectangle<<person>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor PERSON_BG_COLOR
''    BorderColor #073B6F
BorderColor GREY
}

skinparam node<<container>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor NAVY
    BackgroundColor #86BAEF
    BorderColor #3C7FC0
}

skinparam rectangle<<component>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor COMPONENT_BG_COLOR
    BorderColor GREY
    roundCorner 20
}

skinparam database<<database>> {
StereotypeFontColor ELEMENT_FONT_COLOR
FontColor ELEMENT_FONT_COLOR
BackgroundColor COMPONENT_BG_COLOR
BorderColor #3C7FC0
}

skinparam queue<<queue>> {
StereotypeFontColor ELEMENT_FONT_COLOR
FontColor ELEMENT_FONT_COLOR
BackgroundColor COMPONENT_BG_COLOR
''BorderColor #3C7FC0
BorderColor GREY
}
skinparam rectangle<<system>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor ELEMENT_FONT_COLOR
    BackgroundColor SYSTEM_BG_COLOR
    BorderColor #8A8A8A
}

skinparam package<<boundary>> {
    StereotypeFontSize 0
    FontColor #555555
    BorderColor GREY
BackgroundColor #ACC6E0 
}

' Layout
' ##################################

!definelong LAYOUT_AS_SKETCH
skinparam backgroundColor #EEEBDC
skinparam handwritten true
skinparam defaultFontName "Comic Sans MS"
center footer <font color=red>Warning:</font> Created for discussion, needs to be validated
!enddefinelong

!definelong LAYOUT_WITH_LEGEND
hide stereotype
legend right
|=              |= Type |
|<PERSON_BG_COLOR>      | person |
|<CONTAINER_BG_COLOR>   | container |
|<SYSTEM_BG_COLOR>      | external system |
endlegend
!enddefinelong

!define LAYOUT_TOP_DOWN top to bottom direction
!define LAYOUT_LEFT_RIGHT left to right direction

' Elements
' ##################################

!define Person(e_alias, e_label) rectangle "==e_label" <<person>> as e_alias
!define Person(e_alias, e_label, e_descr) rectangle "==e_label\n\n e_descr" <<person>> as e_alias

!define Container(e_alias, e_label, e_techn) node "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container>> as e_alias
!define Container(e_alias, e_label, e_techn, e_descr) node "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<container>> as e_alias

!define Component(e_alias, e_label, e_techn) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<component>> as e_alias
!define Component(e_alias, e_label, e_techn, e_descr) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<component>> as e_alias

!define Database(e_alias, e_label, e_techn) database "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<database>> as e_alias
!define Queue(e_alias, e_label, e_techn) queue "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<queue>> as e_alias

!define System(e_alias, e_label) rectangle "==e_label" <<system>> as e_alias
!define System(e_alias, e_label, e_descr) rectangle "==e_label\n\n e_descr" <<system>> as e_alias

' Relationship
' ##################################

!define Rel_(e_alias1, e_alias2, e_label, e_direction="") e_alias1 e_direction e_alias2 : "===e_label"
!define Rel_(e_alias1, e_alias2, e_label, e_techn, e_direction="") e_alias1 e_direction e_alias2 : "===e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//"

!define Rel(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-->")
!define Rel(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-->")

!define Rel_Back(e_to, e_from, e_label) Rel_(e_to, e_from, e_label, "<--")
!define Rel_Back(e_to, e_from, e_label, e_techn) Rel_(e_to, e_from, e_label, e_techn, "<--")

!define Rel_Neighbor(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "->")
!define Rel_Neighbor(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "->")

!define Rel_Back_Neighbor(e_to, e_from, e_label) Rel_(e_to, e_from, e_label, "<-")
!define Rel_Back_Neighbor(e_to, e_from, e_label, e_techn) Rel_(e_to, e_from, e_label, e_techn, "<-")

!define Rel_D(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-DOWN->")
!define Rel_D(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-DOWN->")
!define Rel_Down(e_from,e_to, e_label) Rel_D(e_from,e_to, e_label)
!define Rel_Down(e_from,e_to, e_label, e_techn) Rel_D(e_from,e_to, e_label, e_techn)

!define Rel_U(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-UP->")
!define Rel_U(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-UP->")
!define Rel_Up(e_from,e_to, e_label) Rel_U(e_from,e_to, e_label)
!define Rel_Up(e_from,e_to, e_label, e_techn) Rel_U(e_from,e_to, e_label, e_techn)

!define Rel_L(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-LEFT->")
!define Rel_L(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-LEFT->")
!define Rel_Left(e_from,e_to, e_label) Rel_L(e_from,e_to, e_label)
!define Rel_Left(e_from,e_to, e_label, e_techn) Rel_L(e_from,e_to, e_label, e_techn)

!define Rel_R(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-RIGHT->")
!define Rel_R(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-RIGHT->")
!define Rel_Right(e_from,e_to, e_label) Rel_R(e_from,e_to, e_label)
!define Rel_Right(e_from,e_to, e_label, e_techn) Rel_R(e_from,e_to, e_label, e_techn)

' Layout Helpers
' ##################################

!define Lay_D(e_from, e_to) e_from -[hidden]D- e_to
!define Lay_U(e_from, e_to) e_from -[hidden]U- e_to
!define Lay_R(e_from, e_to) e_from -[hidden]R- e_to
!define Lay_L(e_from, e_to) e_from -[hidden]L- e_to
